name: Keep Render App Alive

on:
  schedule:
    - cron: "*/5 5-23 * * *" # every 5 minutes between 05:00‚Äì23:59 UTC
  workflow_dispatch:

jobs:
  ping:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Restore ping timestamp
        id: cache
        uses: actions/cache@v4
        with:
          path: .last-ping
          key: ping-timestamp

      - name: Ping Render Auth-React App
        run: |
          node <<'EOF'
          const fs = require("fs");
          const https = require("https");

          const url = "https://auth-with-react-n6pz.onrender.com/health";
          const now = new Date();
          const hour = now.getUTCHours();
          const tsFile = ".last-ping";

          // Skip quiet hours (UTC 00‚Äì04 and 23‚Äì24)
          if (hour < 5 || hour >= 23) {
            console.log("‚è∏Ô∏è Skipping ping: quiet hours (UTC).");
            process.exit(0);
          }

          // Read last ping timestamp if it exists
          let lastPing = 0;
          if (fs.existsSync(tsFile)) {
            lastPing = parseInt(fs.readFileSync(tsFile, "utf8"), 10) || 0;
          }

          const elapsedMin = (Date.now() - lastPing) / 60000;
          const forcePing = elapsedMin >= 10;

          // Always ping during active hours (removed random skip)
          if (forcePing || true) {
            console.log(forcePing ? "‚è∞ Forced ping (>=10 min)" : "üîÅ Regular ping");
            console.log("üïí Current UTC time:", now.toISOString());

            const req = https.get(url, (res) => {
              console.log(`‚úÖ Pinged ${url}, status: ${res.statusCode}`);
              res.on("data", () => {}); // drain data
              res.on("end", () => {
                fs.writeFileSync(tsFile, String(Date.now())); // update timestamp
                console.log("üîö Response ended cleanly, timestamp saved.");
                process.exit(0);
              });
            });

            req.on("error", (err) => {
              console.error("‚ùå Error:", err.message);
              process.exit(1);
            });
          }
          EOF

      - name: Save ping timestamp
        if: success()
        uses: actions/cache@v4
        with:
          path: .last-ping
          key: ping-timestamp
